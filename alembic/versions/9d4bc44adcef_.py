"""empty message

Revision ID: 9d4bc44adcef
Revises: 
Create Date: 2022-10-18 16:05:06.319528

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import FetchedValue


# revision identifiers, used by Alembic.
revision = '9d4bc44adcef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badlinks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Integer(), nullable=True),
    sa.Column('link', sa.String(length=512), nullable=True),
    sa.Column('autoban', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('badpics',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('phash', sa.String(length=64), nullable=True),
    sa.Column('ban_reason', sa.String(length=64), nullable=True),
    sa.Column('ban_time', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('badwords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keyword', sa.String(length=64), nullable=True),
    sa.Column('regex', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('domains',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('can_submit', sa.Boolean(), nullable=True),
    sa.Column('can_comment', sa.Boolean(), nullable=True),
    sa.Column('reason', sa.Integer(), nullable=True),
    sa.Column('show_thumbnail', sa.Boolean(), nullable=True),
    sa.Column('embed_function', sa.String(length=64), nullable=True),
    sa.Column('embed_template', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('state', sa.String(length=8), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('text', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promocodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('percent_off', sa.Integer(), nullable=True),
    sa.Column('flat_cents_off', sa.Integer(), nullable=True),
    sa.Column('flat_cents_min', sa.Integer(), nullable=True),
    sa.Column('promo_start_utc', sa.Integer(), nullable=True),
    sa.Column('promo_end_utc', sa.Integer(), nullable=True),
    sa.Column('promo_info', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('passhash', sa.String(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('admin_level', sa.Integer(), nullable=True),
    sa.Column('is_activated', sa.Boolean(), nullable=True),
    sa.Column('over_18', sa.Boolean(), nullable=True),
    sa.Column('creation_ip', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('bio_html', sa.String(), nullable=True),
    sa.Column('real_id', sa.String(), nullable=True),
    sa.Column('referred_by', sa.Integer(), nullable=True),
    sa.Column('is_banned', sa.Integer(), nullable=True),
    sa.Column('ban_reason', sa.String(), nullable=True),
    sa.Column('defaultsorting', sa.String(), nullable=True),
    sa.Column('defaulttime', sa.String(), nullable=True),
    sa.Column('feed_nonce', sa.Integer(), nullable=True),
    sa.Column('login_nonce', sa.Integer(), nullable=True),
    sa.Column('title_id', sa.Integer(), nullable=True),
    sa.Column('has_profile', sa.Boolean(), nullable=True),
    sa.Column('has_banner', sa.Boolean(), nullable=True),
    sa.Column('reserved', sa.String(length=256), nullable=True),
    sa.Column('is_nsfw', sa.Boolean(), nullable=True),
    sa.Column('tos_agreed_utc', sa.Integer(), nullable=True),
    sa.Column('profile_nonce', sa.Integer(), nullable=True),
    sa.Column('banner_nonce', sa.Integer(), nullable=True),
    sa.Column('last_siege_utc', sa.Integer(), nullable=True),
    sa.Column('mfa_secret', sa.String(length=16), nullable=True),
    sa.Column('hide_offensive', sa.Boolean(), nullable=True),
    sa.Column('hide_bot', sa.Boolean(), nullable=True),
    sa.Column('show_nsfl', sa.Boolean(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('unban_utc', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('delete_reason', sa.String(length=500), nullable=True),
    sa.Column('filter_nsfw', sa.Boolean(), nullable=True),
    sa.Column('stored_karma', sa.Integer(), nullable=True),
    sa.Column('stored_subscriber_count', sa.Integer(), nullable=True),
    sa.Column('auto_join_chat', sa.Boolean(), nullable=True),
    sa.Column('coin_balance', sa.Integer(), nullable=True),
    sa.Column('premium_expires_utc', sa.Integer(), nullable=True),
    sa.Column('negative_balance_cents', sa.Integer(), nullable=True),
    sa.Column('is_nofollow', sa.Boolean(), nullable=True),
    sa.Column('custom_filter_list', sa.String(length=1000), nullable=True),
    sa.Column('discord_id', sa.String(length=64), nullable=True),
    sa.Column('creation_region', sa.String(length=2), nullable=True),
    sa.Column('ban_evade', sa.Integer(), nullable=True),
    sa.Column('profile_upload_ip', sa.String(length=255), nullable=True),
    sa.Column('banner_upload_ip', sa.String(length=255), nullable=True),
    sa.Column('profile_upload_region', sa.String(length=2), nullable=True),
    sa.Column('banner_upload_region', sa.String(length=2), nullable=True),
    sa.Column('color', sa.String(length=6), nullable=True),
    sa.Column('secondary_color', sa.String(length=6), nullable=True),
    sa.Column('signature', sa.String(length=280), nullable=True),
    sa.Column('signature_html', sa.String(length=512), nullable=True),
    sa.Column('profile_set_utc', sa.Integer(), nullable=True),
    sa.Column('banner_set_utc', sa.Integer(), nullable=True),
    sa.Column('original_username', sa.String(length=255), nullable=True),
    sa.Column('name_changed_utc', sa.Integer(), nullable=True),
    sa.Column('energy', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('comment_energy', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('referral_count', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('follower_count', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('alts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user1', sa.Integer(), nullable=True),
    sa.Column('user2', sa.Integer(), nullable=True),
    sa.Column('is_manual', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user1'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user2'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alts_user1'), 'alts', ['user1'], unique=False)
    op.create_index(op.f('ix_alts_user2'), 'alts', ['user2'], unique=False)
    op.create_table('badges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('badge_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('boards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('description_html', sa.String(), nullable=True),
    sa.Column('over_18', sa.Boolean(), nullable=True),
    sa.Column('is_nsfl', sa.Boolean(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('has_banner', sa.Boolean(), nullable=True),
    sa.Column('has_profile', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('ban_reason', sa.String(length=256), nullable=True),
    sa.Column('color', sa.String(length=8), nullable=True),
    sa.Column('restricted_posting', sa.Boolean(), nullable=True),
    sa.Column('disallowbots', sa.Boolean(), nullable=True),
    sa.Column('hide_banner_data', sa.Boolean(), nullable=True),
    sa.Column('profile_nonce', sa.Integer(), nullable=True),
    sa.Column('banner_nonce', sa.Integer(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('color_nonce', sa.Integer(), nullable=True),
    sa.Column('rank_trending', sa.Float(), nullable=True),
    sa.Column('stored_subscriber_count', sa.Integer(), nullable=True),
    sa.Column('all_opt_out', sa.Boolean(), nullable=True),
    sa.Column('is_siegable', sa.Boolean(), nullable=True),
    sa.Column('is_locked_category', sa.Boolean(), nullable=True),
    sa.Column('secondary_color', sa.String(length=6), nullable=True),
    sa.Column('public_chat', sa.Boolean(), nullable=True),
    sa.Column('motd', sa.String(length=1000), nullable=True),
    sa.Column('css_nonce', sa.Integer(), nullable=True),
    sa.Column('css', sa.String(length=65536), nullable=True),
    sa.Column('trending_rank', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('subscriber_count', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_boards_name'), 'boards', ['name'], unique=False)
    op.create_table('follows',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('target_id', sa.BigInteger(), nullable=True),
    sa.Column('created_utc', sa.BigInteger(), nullable=True),
    sa.Column('get_notifs', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['target_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('addr', sa.String(length=64), nullable=True),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('banned_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['banned_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ips_addr'), 'ips', ['addr'], unique=False)
    op.create_table('oauth_apps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.String(length=64), nullable=True),
    sa.Column('client_secret', sa.String(length=128), nullable=True),
    sa.Column('app_name', sa.String(length=50), nullable=True),
    sa.Column('redirect_uri', sa.String(length=4096), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paypal_txns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('paypal_id', sa.String(), nullable=True),
    sa.Column('usd_cents', sa.Integer(), nullable=True),
    sa.Column('coin_count', sa.Integer(), nullable=True),
    sa.Column('promo_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['promo_id'], ['promocodes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('useragents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kwd', sa.String(length=64), nullable=True),
    sa.Column('reason', sa.String(length=256), nullable=True),
    sa.Column('banned_by', sa.Integer(), nullable=True),
    sa.Column('mock', sa.String(length=256), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['banned_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_useragents_kwd'), 'useragents', ['kwd'], unique=False)
    op.create_table('userblocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['target_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bans',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.BigInteger(), nullable=True),
    sa.Column('banning_mod_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('mod_note', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['banning_mod_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('boardblocks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chatbans',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.BigInteger(), nullable=True),
    sa.Column('banning_mod_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['banning_mod_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_auths',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('oauth_client', sa.Integer(), nullable=True),
    sa.Column('oauth_code', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('scope_identity', sa.Boolean(), nullable=True),
    sa.Column('scope_create', sa.Boolean(), nullable=True),
    sa.Column('scope_read', sa.Boolean(), nullable=True),
    sa.Column('scope_update', sa.Boolean(), nullable=True),
    sa.Column('scope_delete', sa.Boolean(), nullable=True),
    sa.Column('scope_vote', sa.Boolean(), nullable=True),
    sa.Column('scope_guildmaster', sa.Boolean(), nullable=True),
    sa.Column('access_token', sa.String(length=128), nullable=True),
    sa.Column('refresh_token', sa.String(length=128), nullable=True),
    sa.Column('access_token_expire_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['oauth_client'], ['oauth_apps.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contributors',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('approving_mod_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approving_mod_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mods',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('invite_rescinded', sa.Boolean(), nullable=True),
    sa.Column('perm_content', sa.Boolean(), nullable=True),
    sa.Column('perm_appearance', sa.Boolean(), nullable=True),
    sa.Column('perm_config', sa.Boolean(), nullable=True),
    sa.Column('perm_access', sa.Boolean(), nullable=True),
    sa.Column('perm_full', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mods_board_id'), 'mods', ['board_id'], unique=False)
    op.create_index(op.f('ix_mods_user_id'), 'mods', ['user_id'], unique=False)
    op.create_table('submissions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=True),
    sa.Column('repost_id', sa.BigInteger(), nullable=True),
    sa.Column('edited_utc', sa.BigInteger(), nullable=True),
    sa.Column('created_utc', sa.BigInteger(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('deleted_utc', sa.Integer(), nullable=True),
    sa.Column('purged_utc', sa.Integer(), nullable=True),
    sa.Column('distinguish_level', sa.Integer(), nullable=True),
    sa.Column('gm_distinguish', sa.Integer(), nullable=True),
    sa.Column('created_str', sa.String(length=255), nullable=True),
    sa.Column('stickied', sa.Boolean(), nullable=True),
    sa.Column('domain_ref', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Integer(), nullable=True),
    sa.Column('approved_utc', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('original_board_id', sa.Integer(), nullable=True),
    sa.Column('over_18', sa.Boolean(), nullable=True),
    sa.Column('creation_ip', sa.String(length=64), nullable=True),
    sa.Column('mod_approved', sa.Integer(), nullable=True),
    sa.Column('accepted_utc', sa.Integer(), nullable=True),
    sa.Column('has_thumb', sa.Boolean(), nullable=True),
    sa.Column('post_public', sa.Boolean(), nullable=True),
    sa.Column('score_hot', sa.Float(), nullable=True),
    sa.Column('score_disputed', sa.Float(), nullable=True),
    sa.Column('score_top', sa.Float(), nullable=True),
    sa.Column('score_activity', sa.Float(), nullable=True),
    sa.Column('is_offensive', sa.Boolean(), nullable=True),
    sa.Column('is_nsfl', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('score_best', sa.Float(), nullable=True),
    sa.Column('is_bot', sa.Boolean(), nullable=True),
    sa.Column('upvotes', sa.Integer(), nullable=True),
    sa.Column('downvotes', sa.Integer(), nullable=True),
    sa.Column('creation_region', sa.String(length=2), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=True),
    sa.Column('ups', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('downs', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('comment_count', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('score', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('rank_hot', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('rank_fiery', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('rank_activity', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('rank_best', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['oauth_apps.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['domain_ref'], ['domains.id'], ),
    sa.ForeignKeyConstraint(['gm_distinguish'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['is_approved'], ['users.id'], ),
    sa.ForeignKeyConstraint(['original_board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['repost_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_submissions_author_id'), 'submissions', ['author_id'], unique=False)
    op.create_index(op.f('ix_submissions_board_id'), 'submissions', ['board_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('board_id', sa.BigInteger(), nullable=True),
    sa.Column('created_utc', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('get_notifs', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('parent_submission', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('edited_utc', sa.Integer(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('distinguish_level', sa.Integer(), nullable=True),
    sa.Column('gm_distinguish', sa.Integer(), nullable=True),
    sa.Column('deleted_utc', sa.Integer(), nullable=True),
    sa.Column('purged_utc', sa.Integer(), nullable=True),
    sa.Column('is_approved', sa.Integer(), nullable=True),
    sa.Column('approved_utc', sa.Integer(), nullable=True),
    sa.Column('creation_ip', sa.String(length=64), nullable=True),
    sa.Column('score_disputed', sa.Float(), nullable=True),
    sa.Column('score_hot', sa.Float(), nullable=True),
    sa.Column('score_top', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('parent_comment_id', sa.Integer(), nullable=True),
    sa.Column('original_board_id', sa.Integer(), nullable=True),
    sa.Column('over_18', sa.Boolean(), nullable=True),
    sa.Column('is_offensive', sa.Boolean(), nullable=True),
    sa.Column('is_nsfl', sa.Boolean(), nullable=True),
    sa.Column('is_bot', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('creation_region', sa.String(length=2), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=True),
    sa.Column('upvotes', sa.Integer(), nullable=True),
    sa.Column('downvotes', sa.Integer(), nullable=True),
    sa.Column('ups', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('downs', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('is_public', sa.Boolean(), server_default=FetchedValue(), nullable=True),
    sa.Column('score', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.Column('rank_fiery', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('rank_hot', sa.Float(), server_default=FetchedValue(), nullable=True),
    sa.Column('board_id', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['oauth_apps.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['gm_distinguish'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['original_board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['parent_submission'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_author_id'), 'comments', ['author_id'], unique=False)
    op.create_index(op.f('ix_comments_original_board_id'), 'comments', ['original_board_id'], unique=False)
    op.create_index(op.f('ix_comments_parent_comment_id'), 'comments', ['parent_comment_id'], unique=False)
    op.create_table('flags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postrels',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), server_default=FetchedValue(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('save_relationship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submissions_aux',
    sa.Column('key_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('body', sa.String(length=10000), nullable=True),
    sa.Column('body_html', sa.String(length=20000), nullable=True),
    sa.Column('ban_reason', sa.String(length=128), nullable=True),
    sa.Column('embed_url', sa.String(length=256), nullable=True),
    sa.Column('meta_title', sa.String(length=512), nullable=True),
    sa.Column('meta_description', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('key_id')
    )
    op.create_table('votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('vote_type', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('creation_ip', sa.String(), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['oauth_apps.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('award_relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commentflags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments_aux',
    sa.Column('key_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(length=10000), nullable=True),
    sa.Column('body_html', sa.String(length=20000), nullable=True),
    sa.Column('ban_reason', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['comments.id'], ),
    sa.PrimaryKeyConstraint('key_id')
    )
    op.create_table('commentvotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('vote_type', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.Column('creation_ip', sa.String(), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['app_id'], ['oauth_apps.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modactions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('kind', sa.String(length=32), nullable=True),
    sa.Column('target_user_id', sa.Integer(), nullable=True),
    sa.Column('target_submission_id', sa.Integer(), nullable=True),
    sa.Column('target_comment_id', sa.Integer(), nullable=True),
    sa.Column('_note', sa.String(length=256), nullable=True),
    sa.Column('created_utc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['boards.id'], ),
    sa.ForeignKeyConstraint(['target_comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['target_submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    op.drop_table('modactions')
    op.drop_table('commentvotes')
    op.drop_table('comments_aux')
    op.drop_table('commentflags')
    op.drop_table('award_relationships')
    op.drop_table('votes')
    op.drop_table('submissions_aux')
    op.drop_table('save_relationship')
    op.drop_table('reports')
    op.drop_table('postrels')
    op.drop_table('flags')
    op.drop_index(op.f('ix_comments_parent_comment_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_original_board_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_author_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_submissions_board_id'), table_name='submissions')
    op.drop_index(op.f('ix_submissions_author_id'), table_name='submissions')
    op.drop_table('submissions')
    op.drop_index(op.f('ix_mods_user_id'), table_name='mods')
    op.drop_index(op.f('ix_mods_board_id'), table_name='mods')
    op.drop_table('mods')
    op.drop_table('contributors')
    op.drop_table('client_auths')
    op.drop_table('chatbans')
    op.drop_table('boardblocks')
    op.drop_table('bans')
    op.drop_table('userblocks')
    op.drop_index(op.f('ix_useragents_kwd'), table_name='useragents')
    op.drop_table('useragents')
    op.drop_table('paypal_txns')
    op.drop_table('oauth_apps')
    op.drop_index(op.f('ix_ips_addr'), table_name='ips')
    op.drop_table('ips')
    op.drop_table('follows')
    op.drop_index(op.f('ix_boards_name'), table_name='boards')
    op.drop_table('boards')
    op.drop_table('badges')
    op.drop_index(op.f('ix_alts_user2'), table_name='alts')
    op.drop_index(op.f('ix_alts_user1'), table_name='alts')
    op.drop_table('alts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('promocodes')
    op.drop_table('images')
    op.drop_table('domains')
    op.drop_table('badwords')
    op.drop_table('badpics')
    op.drop_table('badlinks')
    # ### end Alembic commands ###
